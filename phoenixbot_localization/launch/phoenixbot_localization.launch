<?xml version="1.0"?>
<launch>
    <arg name="map" default=""/>

    <arg name="slam" default="$(eval map == '')"/>

    <!-- Launch SLAM if no static map supplied -->
    <group if="$(arg slam)">
        <node pkg="gmapping" type="slam_gmapping" name="slam">
            <param name="scan" value="scan"/>
        </node>
    </group>

    <!-- Launch map server and AMCL if a static map was supplied -->
    <group unless="$(arg slam)">
        <node pkg="map_server" type="map_server" name="map_server" args="$(find phoenixbot_2dnav)/maps/$(arg map)"/>
        <node pkg="amcl" type="amcl" name="amcl_localization">
            <param name="scan" value="scan"/>
            <param name="tf_broadcast"    value="false"/>
            <param name="base_frame_id"   value="base_link"/>
            <param name="odom_frame_id"   value="odom"/>
            <param name="global_frame_id" value="map"/>
        </node>
    </group>

    <!-- Launch marker localization -->
    <node name="aruco_board" type="aruco_board" pkg="phoenixbot_localization">
        <rosparam command="load" file="$(find phoenixbot_localization)/config/markers.yaml"/>
    </node>

    <!-- Launch beacon localization -->
    <node name="beacon_tf" pkg="beacon_transforms" type="beacon_tf">
      <rosparam command="load" file="$(find phoenixbot_localization)/config/beacons.yaml"/>
    </node>

    <node name="beacon_map_broadcaster" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map beacon_map 100"/>

    <!-- Launch localization filters -->
    <remap from="set_pose" to="initialpose"/>

    <!-- Odom filter -->
    <node name="continuous_localization_node" type="ekf_localization_node" pkg="robot_localization">
        <rosparam command="load" file="$(find phoenixbot_localization)/config/localization_common.yaml"/>
    </node>

    <!-- Global localization (Don't launch if SLAM is running) -->
    <node unless="$(arg slam)" name="global_localization_node" type="ekf_localization_node" pkg="robot_localization">
        <remap from="odometry/filtered" to="localization/filtered"/>
        <rosparam command="load" file="$(find phoenixbot_localization)/config/localization_common.yaml"/>
        <rosparam command="load" file="$(find phoenixbot_localization)/config/localization_global.yaml"/>
    </node>

</launch>
